---
# Copyright 2017-Present, Rackspace Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install host packages required for RPC support
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 600
  with_items: "{{ ops_apt_host_packages }}"
  when:
    - ansible_virtualization_role == 'host'
    - ansible_os_family == 'Debian'

- name: Install packages required for RPC support
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 600
    force: yes
  with_items: "{{ ops_apt_util_packages }}"
  when:
    - ansible_os_family == 'Debian'
  register: support_package_installs
  until: support_package_installs|success
  retries: 2
  delay: 10

- name: Create venv base directory
  file:
    dest: "{{ ops_venv |dirname }}"
    owner: "root"
    group: "root"
    mode: "0755"
    state: "directory"
  when: ops_pip_venv_enabled |bool
  tags:
   - always

- name: Install requires pip packages
  pip:
    name: "{{ ops_requires_pip_packages | join(' ') }}"
    state: latest
    extra_args: >-
      {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
      {{ pip_install_options | default('') }}
  register: install_packages
  until: install_packages|success
  retries: 2
  delay: 2
  tags:
    - always

- name: Create virtualenv and upgrade setuptools
  pip:
    name: setuptools
    state: latest
    extra_args: >-
      --isolated
      {{ pip_install_options|default('') }}
    virtualenv: "{{ ops_venv }}"
  tags:
    - always

- name: Install pip dependencies
  pip:
    name: "{{ ops_pip_dependencies | join (' ') }}"
    extra_args: "{{ pip_install_options|default('') }}"
    virtualenv: "{{ ops_venv }}"
  when: ops_pip_dependencies is defined
  register: pip_install
  ignore_errors: true
  tags:
    - always

- name: Install pip dependencies (fallback --isolated)
  pip:
    name: "{{ ops_pip_dependencies | join(' ') }}"
    extra_args: >-
      --isolated
      {{ pip_install_options|default('') }}
    virtualenv: "{{ ops_venv }}"
  when:
    - ops_pip_dependencies is defined
    - not (pip_install|success)
  register: pip_install_isolated
  until: pip_install_isolated|success
  retries: 2
  tags:
    - always
