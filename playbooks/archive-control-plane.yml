---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Archive container(s)
  hosts: "{{ container_group|default('all_containers') }}"
  gather_facts: false
  serial: '20%'
  user: root
  pre_tasks:
    - name: Create container archive directory
      file:
        path: /openstack/control-plane-archives
        state: directory
      delegate_to: "{{ physical_host }}"

    - name: Collect container configuration
      shell: find . -type f -iname \*\.ini -o -iname \*\.sh -o -iname config
      args:
        chdir: "/var/lib/lxc/{{ item }}"
      with_items: "{{ inventory_hostname }}"
      register: container_config
      delegate_to: "{{ physical_host }}"
  tasks:
    - name: Get container current state
      shell: "lxc-info -sn {{ inventory_hostname }} | awk '{print $2}'"
      register: current_state
      delegate_to: "{{ physical_host }}"

    - name: Archive container rootfs
      lxc_container:
        name: "{{ rpc_release }}-{{ inventory_hostname }}"
        state: "{{ container_state[current_state.stdout.strip()] }}"
        archive: true
        archive_path: /openstack/control-plane-archives
      delegate_to: "{{ physical_host }}"

    - name: Archive container configuration
      shell: "tar czf /openstack/control-plane-archivess/{{ rpc_release }}-{{ inventory_hostname }}_config.tgz {{ container_config.results[0].stdout |replace('\n', ' ') }}"
      args:
        chdir: "/var/lib/lxc/{{ item }}"
      with_items: "{{ inventory_hostname }}"
      delegate_to: "{{ physical_host }}"

  vars:
    container_state:
      RUNNING: started
      STOPPED: stopped
      FROZEN: frozen
