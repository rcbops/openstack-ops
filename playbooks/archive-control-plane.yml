---
# Copyright 2017-Present, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- include: common-playbooks/register-openstack-release.yml

- name: Get container hosts
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create known container hosts fact
      set_fact:
        _known_container_hosts: >
          {% set _var = [] -%}
          {% for item in groups['all_containers'] | default([]) -%}
          {%   if item not in ['ceph_all','rsyslog_all','elasticsearch_all','mons'] -%}
          {%     if hostvars[item]['physical_host'] | default(false) != item -%}
          {%       if _var.append(hostvars[item]['physical_host']) -%}
          {%       endif -%}
          {%     endif -%}
          {%   endif -%}
          {% endfor -%}
          {{ _var | unique }}

    - name: Create dynamic lxc_host group
      add_host:
        hostname: "{{ item }}"
        groups: "known_container_hosts"
      with_items: "{{ _known_container_hosts }}"

- name: Roll out archive directory
  hosts: known_container_hosts
  tasks:
    - name: Create archival destination directory
      file:
        path: /openstack/backup/control-plane
        state: directory

- name: Archive container(s)
  hosts: "{{ container_group|default('all_containers:!ceph_all:!rsyslog_all:!elasticsearch_all:!mons') }}"
  gather_facts: false
  serial: '20%'
  user: root
  pre_tasks:
    - name: Collect container configuration
      command: |
        find . -type f -iname *.ini -o -iname *.sh -o -iname config
      args:
        chdir: "/var/lib/lxc/{{ item }}"
      with_items: "{{ inventory_hostname }}"
      register: container_config
      changed_when: container_config.stdout |length >= 6
      delegate_to: "{{ physical_host }}"
  tasks:
    - name: Get container current state
      shell: |
        lxc-info -sn {{ inventory_hostname }} |awk '{print $2}'
      register: current_state
      changed_when: current_state.rc == 0
      delegate_to: "{{ physical_host }}"

    - name: Remove old container archive
      file:
        name: "{{ item }}"
        state: absent
      with_items:
        - "/openstack/backup/control-plane/{{ openstack_release }}-{{ inventory_hostname }}_config.tgz"
        - "/openstack/backup/control-plane/{{ openstack_release }}-{{ inventory_hostname }}.tar.tgz"
      ignore_errors: True
      delegate_to: "{{ physical_host }}"

    - name: Archive container rootfs
      lxc_container:
        name: "{{ inventory_hostname }}"
        state: "{{ container_state[current_state.stdout.strip()] }}"
        archive: true
        archive_path: /openstack/backup/control-plane
      delegate_to: "{{ physical_host }}"

    - name: Rename container archive
      command: mv -f /openstack/backup/control-plane/{{ inventory_hostname }}.tar.tgz /openstack/backup/control-plane/{{ openstack_release }}-{{ inventory_hostname }}.tar.tgz
      args:
        creates: "/openstack/backup/control-plane/{{ openstack_release }}-{{ inventory_hostname }}.tar.tgz"
      delegate_to: "{{ physical_host }}"

    - name: Archive container configuration
      command: |
        tar czf /openstack/backup/control-plane/{{ openstack_release }}-{{ inventory_hostname }}_config.tgz {{ container_config.results[0].stdout |replace('\n', ' ') }}
      args:
        chdir: "/var/lib/lxc/{{ item }}"
      with_items: "{{ inventory_hostname }}"
      register: tar_command
      changed_when: tar_command.rc == 0
      delegate_to: "{{ physical_host }}"

    - name: Remove temporary containers
      lxc_container:
        name: "{{ openstack_release }}-{{ inventory_hostname }}"
        state: "absent"
      delegate_to: "{{ physical_host }}"
  vars:
    container_state:
      RUNNING: started
      STOPPED: stopped
      FROZEN: frozen
