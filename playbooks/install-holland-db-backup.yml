---
# Copyright 2017-Present, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- import_playbook: "common-playbooks/register-openstack-release.yml"

- import_playbook: "common-playbooks/install-dependencies.yml"
  vars:
    host_group: "galera"

- name: Configure holland DB user
  hosts: galera[0]
  gather_facts: "{{ gather_facts | default(true) }}"
  tasks:
    - name: Create rpc_support backup user
      mysql_user:
        login_host: "{{ inventory_hostname }}"
        name: "{{ item.name }}"
        host: "{{ item.host }}"
        password: "{{ item.password }}"
        priv: "{{ item.priv }}"
        state: "{{ item.state }}"
      with_items:
        - name: "rpc_support"
          host: "%"
          password: "{{ rpc_support_holland_password }}"
          priv: "*.*:ALL"
          state: present
        - name: "rpc_support"
          host: "localhost"
          password: "{{ rpc_support_holland_password }}"
          priv: "*.*:ALL"
          state: present
      tags:
        - holland_sql_user
        - holland_all
  handlers:
    - include: "handlers/main.yml"
  vars_files:
    - "vars/main.yml"
    - "vars/holland.yml"

- name: Install holland OpenStack DB backup utility
  hosts: galera
  gather_facts: "{{ gather_facts | default(true) }}"
  tasks:
    - name: Create venv dir for holland
      file:
        path: "{{ ops_holland_venv }}"
        state: directory

    - name: Install packages required by holland
      package:
        name: "{{ ops_holland_packages | default([]) }}"
        state: latest
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
        cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(ops_package_cache_timeout, omit) }}"

    - name: Install pip dependencies required by holland
      pip:
        name: "{{ ops_holland_pip_dependencies | default([]) }}"
        virtualenv: "{{ ops_holland_venv }}"
        extra_args: >-
          {{ pip_install_options|default('') }}
          --isolated
      register: pip_install
      until: pip_install is success
      retries: 3

    - name: Get holland package from git
      git:
        repo: "{{ ops_holland_git_repo }}"
        dest: "{{ ops_holland_git_dest }}"
        version: "{{ ops_holland_git_install_branch }}"
      register: git_clone
      ignore_errors: yes
      until: git_clone is success
      retries: 2

    - name: Install holland program
      shell:
        cmd: "{{ ops_holland_venv_bin }}/python setup.py install"
        chdir: "/opt/{{ ops_holland_service_name }}_{{ ops_holland_git_install_branch | replace('/', '_') }}"
      register: holland_install
      until: holland_install is success
      retries: 2
      async: 1800
      delay: 5
      poll: 5
      tags:
        - holland_install

    - name: Install holland pip repo plugins
      shell:
        cmd: "{{ ops_holland_venv_bin }}/python setup.py install"
        chdir: "{{ ops_holland_git_dest }}/{{ item.path }}/{{ item.package }}"
      when: ops_holland_git_dest is defined and ops_holland_git_repo_plugins is defined
      with_items: "{{ ops_holland_git_repo_plugins }}"
      register: plugin_install
      until: plugin_install is success
      retries: 2
      delay: 10
      tags:
        - holland_install

    - name: Create holland directories
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - "/var/backup/holland_backups"
        - "/var/backup/holland_backups/rpc_support"
        - "/var/log/holland"
        - "/etc/holland"
      tags:
        - holland_dir
        - holland_all

    - name: Create links to point to holland config files
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - src: "{{ ops_holland_git_dest }}/config/providers"
          dest: "/etc/holland/providers"
        - src: "{{ ops_holland_git_dest }}/config/backupsets"
          dest: "/etc/holland/backupsets"
      tags:
        - holland_conf
        - holland_all

    - name: Setup holland backup
      template:
        owner: root
        group: root
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - src: "templates/holland-mariabackup.conf.j2"
          dest: "/etc/holland/backupsets/rpc_support.conf"
        - src: "templates/holland.conf.j2"
          dest: "/etc/holland/holland.conf"
      tags:
        - holland_conf
        - holland_all

    - name: Create holland backup cron job
      cron:
        name: "holland-backup"
        minute: "{{ (ansible_all_ipv4_addresses[0]|replace('.', '')|int)%60 }}"
        hour: 23
        state: present
        job: "{{ ops_holland_venv_bin }}/python {{ ops_holland_venv_bin }}/holland bk"
        user: root
        cron_file: holland_backups
      tags:
        - holland_cron
        - holland_all
  handlers:
    - include: "handlers/main.yml"
  vars_files:
    - "vars/main.yml"
    - "vars/holland.yml"


- name: Create holland backup set
  hosts: galera
  tasks:
    - name: List holland backups
      command: |
         find /var/backup/holland_backups/rpc_support -iregex '.*/[0-9]+_[0-9]+/backup.xb' -type f -size +3M
      ignore_errors: True
      changed_when: found_holland_backups.rc != 0
      register: found_holland_backups

    - name: Create holland backup
      command: |
        {{ ops_holland_venv_bin }}/holland bk
      when:
        - found_holland_backups.stdout_lines | length == 0
      tags:
        - holland_create_backup
        - holland_all
  tags:
    - holland_create_backup
    - holland_all

  vars_files:
    - "vars/main.yml"
    - "vars/holland.yml"
